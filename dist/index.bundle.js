(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>m});var i=t(537),o=t.n(i),r=t(645),a=t.n(r),A=t(667),s=t.n(A),l=new URL(t(154),t.b),c=new URL(t(214),t.b),d=a()(o()),p=s()(l),u=s()(c);d.push([n.id,"* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\n@font-face {\n  font-family: MyFont;\n  src: url("+p+");\n}\n\n@font-face {\n  font-family: Croissant;\n  src: url("+u+");\n}\n\nbody {\n  overflow-x: hidden;\n  font-family: 'Croissant', sans-serif;\n  background-color: rgb(45, 32, 19);\n  color: #fff;\n}\n\nheader {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100vw;\n  height: 12vh;\n  padding: 10px 250px;\n  position: fixed;\n  top: 0;\n  margin-bottom: 50px;\n  background-color: #23180d;\n  box-shadow: 1px 1px 2px green;\n}\n\n.alert {\n  display: none;\n  width: 50%;\n  margin: 0 auto 30px auto;\n  text-align: center;\n  padding: 20px;\n  font-weight: bold;\n}\n\n.success {\n  background-color: rgb(157, 245, 157);\n}\n\n.error {\n  background-color: rgb(238, 130, 130);\n}\n\n.visible {\n  display: block;\n}\n\n.invisible {\n  display: none;\n}\n\n.logo {\n  width: 150px;\n  color: yellow;\n}\n\nnav ul {\n  display: flex;\n  list-style-type: none;\n  margin-left: 10px;\n}\n\nnav ul li {\n  margin-left: 100px;\n}\n\nnav ul li a,\np {\n  color: #fff;\n  text-decoration: none;\n  background: -webkit-linear-gradient(orange, yellow, green);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\nnav ul li a:hover {\n  text-decoration: underline;\n}\n\n.meals {\n  text-decoration: underline;\n  font-weight: bold;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  margin-top: 100px;\n  margin-bottom: 60px;\n  width: 100vw;\n  justify-items: center;\n}\n\n.image {\n  height: 200px;\n  width: 200px;\n  border-radius: 10px;\n}\n\nsection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.likes {\n  display: flex;\n  flex-direction: row;\n  width: 200px;\n  justify-content: space-between;\n  padding: 20px 0;\n}\n\n.likes img {\n  width: 30px;\n}\n\n.like-counter {\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  margin-left: 20px;\n}\n\n.like-counter p {\n  font-size: 12px;\n  width: 60px;\n  margin-top: 8px;\n}\n\n.heart {\n  cursor: pointer;\n  align-self: center;\n}\n\nbutton {\n  font-family: 'Poppins', sans-serif;\n  margin-bottom: 30px;\n  color: yellow;\n  margin-left: 20px;\n  padding: 5px 10px;\n  background: black;\n  border: 1px solid yellow;\n  box-shadow: 1px 1px 1px green;\n  cursor: pointer;\n  border-radius: 8px;\n  font-size: 1rem;\n}\n\n.popup-window {\n  position: relative;\n  width: 65%;\n  margin: 20px auto;\n  padding: 20px;\n  backdrop-filter: blur(4px);\n  background-color: rgb(45, 32, 19);;\n  border: 2px solid yellow;\n  box-shadow: 1px 1px 1px green;\n}\n\n.meal-popup-img {\n  width: 50%;\n}\n\n.close-menu {\n  font-size: 35px;\n  position: absolute;\n  top: 33px;\n  font-weight: 900;\n  right: -30px;\n  cursor: pointer;\n}\n\n.popup-window li {\n  list-style: none;\n}\n\n.popup-img-div img {\n  margin: 20px auto;\n  width: 75%;\n  height: 400px;\n}\n\n.popup-details-div {\n  text-align: center;\n}\n\n.popup-details-div h1 {\n  font-size: 50px;\n}\n\n.details-list {\n  display: flex;\n  justify-content: space-between;\n  font-size: 20px;\n}\n\n.comments-container h3 {\n  text-align: center;\n  margin: 20px 0;\n}\n\n.comments-container form {\n  width: 50%;\n  margin: 0 auto;\n}\n\n.input-group input,\ntextarea {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n}\n\n.button-div button {\n  margin-left: 0;\n}\n\nfooter {\n  font-family: 'Poppins', sans-serif;\n  padding: 10px 100px;\n  border-top: 2px solid #23180d;\n  position: fixed;\n  bottom: 0;\n  width: 100vw;\n  margin-top: 100px;\n  background-color: #23180d;\n  box-shadow: 2px 2px 8px green;\n  color: yellow;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;EACnB,4CAAiC;AACnC;;AAEA;EACE,sBAAsB;EACtB,4CAAoC;AACtC;;AAEA;EACE,kBAAkB;EAClB,oCAAoC;EACpC,iCAAiC;EACjC,WAAW;AACb;;AAEA;EACE,aAAa;EACb,2BAA2B;EAC3B,mBAAmB;EACnB,YAAY;EACZ,YAAY;EACZ,mBAAmB;EACnB,eAAe;EACf,MAAM;EACN,mBAAmB;EACnB,yBAAyB;EACzB,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,UAAU;EACV,wBAAwB;EACxB,kBAAkB;EAClB,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,WAAW;EACX,qBAAqB;EACrB,0DAA0D;EAC1D,6BAA6B;EAC7B,oCAAoC;AACtC;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,0BAA0B;EAC1B,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,kCAAkC;EAClC,2BAA2B;EAC3B,iBAAiB;EACjB,mBAAmB;EACnB,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,YAAY;EACZ,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,WAAW;EACX,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,kCAAkC;EAClC,mBAAmB;EACnB,aAAa;EACb,iBAAiB;EACjB,iBAAiB;EACjB,iBAAiB;EACjB,wBAAwB;EACxB,6BAA6B;EAC7B,eAAe;EACf,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,iBAAiB;EACjB,aAAa;EACb,0BAA0B;EAC1B,iCAAiC;EACjC,wBAAwB;EACxB,6BAA6B;AAC/B;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,SAAS;EACT,gBAAgB;EAChB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,UAAU;EACV,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,UAAU;EACV,cAAc;AAChB;;AAEA;;EAEE,WAAW;EACX,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kCAAkC;EAClC,mBAAmB;EACnB,6BAA6B;EAC7B,eAAe;EACf,SAAS;EACT,YAAY;EACZ,iBAAiB;EACjB,yBAAyB;EACzB,6BAA6B;EAC7B,aAAa;AACf",sourcesContent:["* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\n@font-face {\n  font-family: MyFont;\n  src: url(./HFF\\ Fire\\ Dancer.ttf);\n}\n\n@font-face {\n  font-family: Croissant;\n  src: url(./CroissantOne-Regular.ttf);\n}\n\nbody {\n  overflow-x: hidden;\n  font-family: 'Croissant', sans-serif;\n  background-color: rgb(45, 32, 19);\n  color: #fff;\n}\n\nheader {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100vw;\n  height: 12vh;\n  padding: 10px 250px;\n  position: fixed;\n  top: 0;\n  margin-bottom: 50px;\n  background-color: #23180d;\n  box-shadow: 1px 1px 2px green;\n}\n\n.alert {\n  display: none;\n  width: 50%;\n  margin: 0 auto 30px auto;\n  text-align: center;\n  padding: 20px;\n  font-weight: bold;\n}\n\n.success {\n  background-color: rgb(157, 245, 157);\n}\n\n.error {\n  background-color: rgb(238, 130, 130);\n}\n\n.visible {\n  display: block;\n}\n\n.invisible {\n  display: none;\n}\n\n.logo {\n  width: 150px;\n  color: yellow;\n}\n\nnav ul {\n  display: flex;\n  list-style-type: none;\n  margin-left: 10px;\n}\n\nnav ul li {\n  margin-left: 100px;\n}\n\nnav ul li a,\np {\n  color: #fff;\n  text-decoration: none;\n  background: -webkit-linear-gradient(orange, yellow, green);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\nnav ul li a:hover {\n  text-decoration: underline;\n}\n\n.meals {\n  text-decoration: underline;\n  font-weight: bold;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  margin-top: 100px;\n  margin-bottom: 60px;\n  width: 100vw;\n  justify-items: center;\n}\n\n.image {\n  height: 200px;\n  width: 200px;\n  border-radius: 10px;\n}\n\nsection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.likes {\n  display: flex;\n  flex-direction: row;\n  width: 200px;\n  justify-content: space-between;\n  padding: 20px 0;\n}\n\n.likes img {\n  width: 30px;\n}\n\n.like-counter {\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  margin-left: 20px;\n}\n\n.like-counter p {\n  font-size: 12px;\n  width: 60px;\n  margin-top: 8px;\n}\n\n.heart {\n  cursor: pointer;\n  align-self: center;\n}\n\nbutton {\n  font-family: 'Poppins', sans-serif;\n  margin-bottom: 30px;\n  color: yellow;\n  margin-left: 20px;\n  padding: 5px 10px;\n  background: black;\n  border: 1px solid yellow;\n  box-shadow: 1px 1px 1px green;\n  cursor: pointer;\n  border-radius: 8px;\n  font-size: 1rem;\n}\n\n.popup-window {\n  position: relative;\n  width: 65%;\n  margin: 20px auto;\n  padding: 20px;\n  backdrop-filter: blur(4px);\n  background-color: rgb(45, 32, 19);;\n  border: 2px solid yellow;\n  box-shadow: 1px 1px 1px green;\n}\n\n.meal-popup-img {\n  width: 50%;\n}\n\n.close-menu {\n  font-size: 35px;\n  position: absolute;\n  top: 33px;\n  font-weight: 900;\n  right: -30px;\n  cursor: pointer;\n}\n\n.popup-window li {\n  list-style: none;\n}\n\n.popup-img-div img {\n  margin: 20px auto;\n  width: 75%;\n  height: 400px;\n}\n\n.popup-details-div {\n  text-align: center;\n}\n\n.popup-details-div h1 {\n  font-size: 50px;\n}\n\n.details-list {\n  display: flex;\n  justify-content: space-between;\n  font-size: 20px;\n}\n\n.comments-container h3 {\n  text-align: center;\n  margin: 20px 0;\n}\n\n.comments-container form {\n  width: 50%;\n  margin: 0 auto;\n}\n\n.input-group input,\ntextarea {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n}\n\n.button-div button {\n  margin-left: 0;\n}\n\nfooter {\n  font-family: 'Poppins', sans-serif;\n  padding: 10px 100px;\n  border-top: 2px solid #23180d;\n  position: fixed;\n  bottom: 0;\n  width: 100vw;\n  margin-top: 100px;\n  background-color: #23180d;\n  box-shadow: 2px 2px 8px green;\n  color: yellow;\n}\n"],sourceRoot:""}]);const m=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(i)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);i&&a[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},a=[],A=0;A<n.length;A++){var s=n[A],l=i.base?s[0]+i.base:s[0],c=r[l]||0,d="".concat(l," ").concat(c);r[l]=c+1;var p=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,i);i.byIndex=A,e.splice(A,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=i(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var A=t(r[a]);e[A].references--}for(var s=i(n,o),l=0;l<r.length;l++){var c=t(r[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},214:(n,e,t)=>{n.exports=t.p+"b6a7babc45d77f0cade9.ttf"},154:(n,e,t)=>{n.exports=t.p+"caa3c2ab05b244a23ee6.ttf"},984:(n,e,t)=>{n.exports=t.p+"9e2dcc4770508f8799e5.svg"},100:(n,e,t)=>{n.exports=t.p+"6b39fafced5a8d91d71d.svg"}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),i=t(795),o=t.n(i),r=t(569),a=t.n(r),A=t(565),s=t.n(A),l=t(216),c=t.n(l),d=t(589),p=t.n(d),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=c(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var f=t(100),C=t(984);const h=async n=>{const e=`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/d0e1ntHbrVs5EbhAIJhd/comments?item_id=${n}`;return(await fetch(e)).json()},g=(n,e)=>{const t=document.createElement(n);return e&&(t.className=e),t},E=g("header"),x=g("img","logo");x.src=f;const B=g("nav"),b=g("ul"),v=g("li","meals"),y=g("a");y.href="#",fetch("https://www.themealdb.com/api/json/v1/1/filter.php?c=Seafood").then((n=>n.json())).then((n=>{y.textContent=`Meals (${n.meals.length})`}));const w=g("li"),k=g("a");k.href="#",k.textContent="Vegetarian";const j=g("li"),T=g("a");T.href="#",T.textContent="Cakes";const S=g("footer");S.textContent="Created By Abdul & Willy under CC licence";const M=document.getElementById("root"),U=g("main"),L=n=>{const e=g("section","popup-window invisible"),t=` \n    <small class='close-menu'>X</small>   \n    <div class='blur-background'> \n      \n      <div class="popup-img-div"><img class="meal-popup-img" src="${n.image}" alt="meal" /></div>\n      <div class="popup-details-div">\n      <h1> ${n.title} </h1>\n      <div class="details-list">\n          <ul>\n          <li>Category: Rice</li>\n          <li>Category: Rice</li>\n          </ul>\n          <ul>\n          <li>Category: Rice</li>\n          <li>Category: Rice</li>\n          </ul>\n      </div>\n    </div>\n    <div class="comments-container">\n  <div class="comments-div">\n  <div class='alert'> </div>\n    <h3></h3>\n    <div></div>\n  </div>\n  <h3>Add a comment</h3>\n  <form>\n    <div class="input-group">\n      <input type="text" class="nameInput" placeholder="Your name" />\n    </div>\n    <div class="input-group">\n      <textarea\n        name=""\n        id="commentInput"\n        cols="30"\n        rows="10"\n        placeholder="Your insights"\n      ></textarea>\n    </div>\n    <div class=''button-div>\n    <button type='submit' class='submit-comment-btn'> Comment </button>\n    </div>\n  </form>\n</div>\n`;e.innerHTML=t,((n,e)=>{const t={item_id:e,username:"",comment:""},i=n.children[1].children[2].children[2].children[0].children[0],o=n.children[1].children[2].children[2].children[1].children[0],r=n.children[1].children[2].children[2].children[2].children[0],a=n.children[1].children[2].children[0].children[0];i.addEventListener("change",(n=>{t.username=n.target.value})),o.addEventListener("change",(n=>{t.comment=n.target.value})),r.addEventListener("click",(async n=>{if(n.preventDefault(),i.value.length>1&&o.value.length>1){const n=await(async n=>await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/d0e1ntHbrVs5EbhAIJhd/comments",{method:"POST",body:JSON.stringify({item_id:n.item_id,username:n.username,comment:n.comment}),headers:{"Content-type":"application/json"}}))(t);201===n.status&&(i.value="",o.value="",a.innerHTML="Comment Created Successfully",a.classList.remove("invisible"),a.classList.add("success","visible"),(n=>{setTimeout((()=>{n.classList.remove("success","error"),n.classList.add("invisible"),window.location.reload()}),5e3)})(a))}}))})(e,n.id),(async(n,e)=>{const t=await(async n=>{const e=await h(n);if(e.error){const n=0;if("'item_id' not found."===e.error.message)return n}return e.length})(e),i=await h(e);if(n.children[1].children[2].children[0].children[1].textContent=`Comments ${t}`,t>0){let e="";const t=n.children[1].children[2].children[0].children[2];for(let n=0;n<i.length;n+=1)e+=`<p> ${i[n].creation_date} ${i[n].username}: ${i[n].comment} </p>`;t.innerHTML=e}})(e,n.id),(async(n,e)=>{const{meals:t}=await(async n=>(await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${n}`)).json())(e);n.children[1].children[1].children[1].children[0].children[0].textContent=`Region: ${t[0].strArea}`,n.children[1].children[1].children[1].children[0].children[1].textContent=`Category: ${t[0].strCategory}`,n.children[1].children[1].children[1].children[1].children[0].textContent=`Ingredients: ${t[0].strIngredient1}, ${t[0].strIngredient2} ...`,n.children[1].children[1].children[1].children[1].children[1].textContent=`Tags: ${t[0].strTags}`})(e,n.id),e.style.display="block",U.style.display="none",document.body.appendChild(e),document.querySelector(".close-menu").addEventListener("click",(()=>{e.remove(),U.style.display="grid"}))};(async()=>{const n=await(async()=>(await fetch("https://www.themealdb.com/api/json/v1/1/filter.php?c=Seafood")).json())();n.meals.forEach(((e,t)=>{e=g("section");const i=g("img","image");i.src=n.meals[t].strMealThumb,i.alt="space-image",e.id=n.meals[t].idMeal;const o=g("div","likes"),r=g("p");r.textContent=n.meals[t].strMeal;const a=g("div","like-counter"),A=g("img");A.src=C,A.alt="heart-image";const s=g("p");s.textContent="0 like",A.addEventListener("click",(async n=>{n.preventDefault(),async function(n="",e={}){await fetch(n,{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer",body:JSON.stringify(e)})}("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/d0e1ntHbrVs5EbhAIJhd/likes/",{item_id:e.id});const t=s.textContent.split(" ")[0];s.innerHTML=`${parseInt(t,10)+1} likes`})),async function(n=""){return(await fetch(n,{method:"GET",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"}})).json()}("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/d0e1ntHbrVs5EbhAIJhd/likes/").then((n=>{s.textContent=`${n[t].likes} likes`})),a.appendChild(A),a.appendChild(s),o.appendChild(r),o.appendChild(a);const l=g("button");l.textContent="Comments",e.appendChild(i),e.appendChild(o),e.appendChild(l),U.appendChild(e)})),(n=>{const e=n.children,t={id:"",title:"",image:""};for(let n=0;n<e.length;n+=1)e[n].children[2].addEventListener("click",(n=>{const e=n.target.parentElement.children[1].children[0].textContent,i=n.target.parentElement.children[0].src;t.id=n.target.parentElement.id,t.title=e,t.image=i,L(t)}))})(U)})(),v.appendChild(y),w.appendChild(k),j.appendChild(T),b.append(v,w,j),B.appendChild(b),E.append(x,B),M.append(E,U,S)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,