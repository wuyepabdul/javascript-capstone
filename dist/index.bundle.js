(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>f});var i=t(537),o=t.n(i),r=t(645),a=t.n(r),A=t(667),s=t.n(A),l=new URL(t(154),t.b),p=new URL(t(214),t.b),c=a()(o()),d=s()(l),u=s()(p);c.push([n.id,"* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\n@font-face {\n  font-family: MyFont;\n  src: url("+d+");\n}\n\n@font-face {\n  font-family: Croissant;\n  src: url("+u+");\n}\n\nbody {\n  overflow-x: hidden;\n  font-family: 'Croissant', sans-serif;\n  background-color: #000;\n  color: #fff;\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100vw;\n  height: 12vh;\n  padding: 10px 250px;\n  position: fixed;\n  top: 0;\n  margin-bottom: 50px;\n  background-color: #000;\n  box-shadow: 2px 2px 5px green;\n}\n\np {\n  text-align: center;\n}\n\n.visible {\n  display: block;\n}\n\n.invisible {\n  display: none;\n}\n\n.logo {\n  width: 150px;\n  color: yellow;\n}\n\nnav ul {\n  display: flex;\n  list-style-type: none;\n  margin-left: 10px;\n}\n\nnav ul li {\n  margin-left: 100px;\n}\n\nnav ul li a, p {\n  color: #fff;\n  text-decoration: none;\n  background: -webkit-linear-gradient(orange, yellow, green);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\nnav ul li a: hover {\n  text-decoration: underline;\n}\n\n.meals {\n  text-decoration: underline;\n  font-weight: bold;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  margin-top: 100px;\n  margin-bottom: 60px;\n  width: 100vw;\n  justify-items: center;\n}\n\n.image {\n  height: 200px;\n  width: 200px;\n  border-radius: 10px;\n}\n\nsection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.likes {\n  display: flex;\n  flex-direction: row;\n  width: 200px;\n  justify-content: space-between;\n  padding: 20px 20px;\n}\n\n.likes img {\n  width: 30px;\n}\n\n.like-counter {\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  margin-left: 20px;\n}\n\n.heart {\n  cursor: pointer;\n}\n\nbutton {\n  font-family: 'Poppins', sans-serif;\n  margin-bottom: 30px;\n  color: yellow;\n  margin-left: 20px;\n  padding: 5px 10px;\n  background: black;\n  border: 1px solid yellow;\n  box-shadow: 1px 1px 1px green;\n  cursor: pointer;\n  border-radius: 8px;\n  font-size: 1rem;\n}\n\n.popup-window {\n  position: relative;\n  width: 65%;\n  margin: 0 auto;\n  padding: 20px;\n  backdrop-filter: blur(4px);\n}\n\n.close-menu {\n  font-size: 35px;\n  position: absolute;\n  top: 33px;\n  font-weight: 900;\n  right: -30px;\n  cursor: pointer;\n}\n\n.popup-window li {\n  list-style: none;\n}\n\n.popup-img-div img {\n  margin-top: 20px;\n  width: 100%;\n  height: 400px;\n}\n\n.popup-details-div {\n  text-align: center;\n}\n\n.popup-details-div h1 {\n  font-size: 50px;\n}\n\n.details-list {\n  display: flex;\n  justify-content: space-between;\n  font-size: 20px;\n}\n\n.comments-container h3 {\n  text-align: center;\n  margin: 20px 0;\n}\n\n.comments-container form {\n  width: 50%;\n  margin: 0 auto;\n}\n\n.input-group input,\ntextarea {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n}\n\n.button-div button {\n  margin-left: 0;\n}\n\nfooter {\n  font-family: 'Poppins', sans-serif;\n  padding: 10px 100px;\n  border-top: 2px solid black;\n  position: fixed;\n  bottom: 0;\n  width: 100vw;\n  margin-top: 100px;\n  background-color: black;\n  box-shadow: 2px 2px 8px green;\n  color: yellow;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;EACnB,4CAAiC;AACnC;;AAEA;EACE,sBAAsB;EACtB,4CAAoC;AACtC;;AAEA;EACE,kBAAkB;EAClB,oCAAoC;EACpC,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,YAAY;EACZ,YAAY;EACZ,mBAAmB;EACnB,eAAe;EACf,MAAM;EACN,mBAAmB;EACnB,sBAAsB;EACtB,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,qBAAqB;EACrB,0DAA0D;EAC1D,6BAA6B;EAC7B,oCAAoC;AACtC;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,0BAA0B;EAC1B,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,kCAAkC;EAClC,2BAA2B;EAC3B,iBAAiB;EACjB,mBAAmB;EACnB,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,YAAY;EACZ,8BAA8B;EAC9B,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,iBAAiB;AACnB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kCAAkC;EAClC,mBAAmB;EACnB,aAAa;EACb,iBAAiB;EACjB,iBAAiB;EACjB,iBAAiB;EACjB,wBAAwB;EACxB,6BAA6B;EAC7B,eAAe;EACf,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,cAAc;EACd,aAAa;EACb,0BAA0B;AAC5B;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,SAAS;EACT,gBAAgB;EAChB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,UAAU;EACV,cAAc;AAChB;;AAEA;;EAEE,WAAW;EACX,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kCAAkC;EAClC,mBAAmB;EACnB,2BAA2B;EAC3B,eAAe;EACf,SAAS;EACT,YAAY;EACZ,iBAAiB;EACjB,uBAAuB;EACvB,6BAA6B;EAC7B,aAAa;AACf",sourcesContent:["* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\n@font-face {\n  font-family: MyFont;\n  src: url(./HFF\\ Fire\\ Dancer.ttf);\n}\n\n@font-face {\n  font-family: Croissant;\n  src: url(./CroissantOne-Regular.ttf);\n}\n\nbody {\n  overflow-x: hidden;\n  font-family: 'Croissant', sans-serif;\n  background-color: #000;\n  color: #fff;\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100vw;\n  height: 12vh;\n  padding: 10px 250px;\n  position: fixed;\n  top: 0;\n  margin-bottom: 50px;\n  background-color: #000;\n  box-shadow: 2px 2px 5px green;\n}\n\np {\n  text-align: center;\n}\n\n.visible {\n  display: block;\n}\n\n.invisible {\n  display: none;\n}\n\n.logo {\n  width: 150px;\n  color: yellow;\n}\n\nnav ul {\n  display: flex;\n  list-style-type: none;\n  margin-left: 10px;\n}\n\nnav ul li {\n  margin-left: 100px;\n}\n\nnav ul li a, p {\n  color: #fff;\n  text-decoration: none;\n  background: -webkit-linear-gradient(orange, yellow, green);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\nnav ul li a: hover {\n  text-decoration: underline;\n}\n\n.meals {\n  text-decoration: underline;\n  font-weight: bold;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  margin-top: 100px;\n  margin-bottom: 60px;\n  width: 100vw;\n  justify-items: center;\n}\n\n.image {\n  height: 200px;\n  width: 200px;\n  border-radius: 10px;\n}\n\nsection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.likes {\n  display: flex;\n  flex-direction: row;\n  width: 200px;\n  justify-content: space-between;\n  padding: 20px 20px;\n}\n\n.likes img {\n  width: 30px;\n}\n\n.like-counter {\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  margin-left: 20px;\n}\n\n.heart {\n  cursor: pointer;\n}\n\nbutton {\n  font-family: 'Poppins', sans-serif;\n  margin-bottom: 30px;\n  color: yellow;\n  margin-left: 20px;\n  padding: 5px 10px;\n  background: black;\n  border: 1px solid yellow;\n  box-shadow: 1px 1px 1px green;\n  cursor: pointer;\n  border-radius: 8px;\n  font-size: 1rem;\n}\n\n.popup-window {\n  position: relative;\n  width: 65%;\n  margin: 0 auto;\n  padding: 20px;\n  backdrop-filter: blur(4px);\n}\n\n.close-menu {\n  font-size: 35px;\n  position: absolute;\n  top: 33px;\n  font-weight: 900;\n  right: -30px;\n  cursor: pointer;\n}\n\n.popup-window li {\n  list-style: none;\n}\n\n.popup-img-div img {\n  margin-top: 20px;\n  width: 100%;\n  height: 400px;\n}\n\n.popup-details-div {\n  text-align: center;\n}\n\n.popup-details-div h1 {\n  font-size: 50px;\n}\n\n.details-list {\n  display: flex;\n  justify-content: space-between;\n  font-size: 20px;\n}\n\n.comments-container h3 {\n  text-align: center;\n  margin: 20px 0;\n}\n\n.comments-container form {\n  width: 50%;\n  margin: 0 auto;\n}\n\n.input-group input,\ntextarea {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n}\n\n.button-div button {\n  margin-left: 0;\n}\n\nfooter {\n  font-family: 'Poppins', sans-serif;\n  padding: 10px 100px;\n  border-top: 2px solid black;\n  position: fixed;\n  bottom: 0;\n  width: 100vw;\n  margin-top: 100px;\n  background-color: black;\n  box-shadow: 2px 2px 8px green;\n  color: yellow;\n}"],sourceRoot:""}]);const f=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(i)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var l=0;l<n.length;l++){var p=[].concat(n[l]);i&&a[p[0]]||(void 0!==r&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=r),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},a=[],A=0;A<n.length;A++){var s=n[A],l=i.base?s[0]+i.base:s[0],p=r[l]||0,c="".concat(l," ").concat(p);r[l]=p+1;var d=t(c),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var f=o(u,i);i.byIndex=A,e.splice(A,0,{identifier:c,updater:f,references:1})}a.push(c)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=i(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var A=t(r[a]);e[A].references--}for(var s=i(n,o),l=0;l<r.length;l++){var p=t(r[l]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},214:(n,e,t)=>{n.exports=t.p+"b6a7babc45d77f0cade9.ttf"},154:(n,e,t)=>{n.exports=t.p+"caa3c2ab05b244a23ee6.ttf"},984:(n,e,t)=>{n.exports=t.p+"9e2dcc4770508f8799e5.svg"},704:(n,e,t)=>{n.exports=t.p+"35384cfe509651ff371d.svg"},100:(n,e,t)=>{n.exports=t.p+"6b39fafced5a8d91d71d.svg"}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),i=t(795),o=t.n(i),r=t(569),a=t.n(r),A=t(565),s=t.n(A),l=t(216),p=t.n(l),c=t(589),d=t.n(c),u=t(426),f={};f.styleTagTransform=d(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=p(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals,t(704);var m=t(100),C=t(984);const E=(n,e)=>{const t=document.createElement(n);return e&&(t.className=e),t},g=E("header"),x=E("img","logo");x.src=m,x.alt="restaurant-logo";const h=E("nav"),B=E("ul"),b=E("li","meals"),v=E("a");v.href="#",fetch("https://www.themealdb.com/api/json/v1/1/filter.php?c=Seafood").then((n=>n.json())).then((n=>{v.textContent=`Meals (${n.meals.length})`}));const y=E("li"),w=E("a");w.href="#",w.textContent="Vegetarian";const k=E("li"),j=E("a");j.href="#",j.textContent="Cakes";const S=E("footer");S.textContent="Created By Abdul & Willy under CC licence";const T=document.getElementById("root"),M=E("main"),Y=n=>{const e=E("section","popup-window invisible"),t=` \n    <small class='close-menu'>X</small>   \n    <div class='blur-background'> \n      \n      <div class="popup-img-div"><img class="meal-popup-img" src="${n.image}" alt="meal" /></div>\n      <div class="popup-details-div">\n      <h1> ${n.title} </h1>\n      <div class="details-list">\n          <ul>\n          <li>Category: Rice</li>\n          <li>Category: Rice</li>\n          </ul>\n          <ul>\n          <li>Category: Rice</li>\n          <li>Category: Rice</li>\n          </ul>\n      </div>\n    </div>\n    <div class="comments-container">\n  <div class="comments-div">\n    <h3>Comments (3)</h3>\n  </div>\n  <h3>Add a comment</h3>\n  <form>\n    <div class="input-group">\n      <input type="text" class="nameInput" placeholder="Your name" />\n    </div>\n    <div class="input-group">\n      <textarea\n        name=""\n        id="commentInput"\n        cols="30"\n        rows="10"\n        placeholder="Your insights"\n      ></textarea>\n    </div>\n    <div class=''button-div>\n    <button type='submit' class='submit-comment-btn'> Comment </button>\n    </div>\n  </form>\n</div>\n`;e.innerHTML=t,e.style.display="block",M.style.display="none",document.body.appendChild(e),document.querySelector(".close-menu").addEventListener("click",(()=>{e.remove(),M.style.display="grid"}))};(async()=>{const n=await(async()=>(await fetch("https://www.themealdb.com/api/json/v1/1/filter.php?c=Seafood")).json())();n.meals.forEach(((e,t)=>{e=E("section");const i=E("img","image");i.src=n.meals[t].strMealThumb,i.alt="space-image",e.id=n.meals[t].idMeal;const o=E("div","likes"),r=E("p");r.textContent=n.meals[t].strMeal;const a=E("div","like-counter"),A=E("img","heart");A.src=C,A.alt="heart-image";const s=E("p");s.textContent="0 likes",A.addEventListener("click",(async n=>{n.preventDefault(),async function(n="",e={}){await fetch(n,{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer",body:JSON.stringify(e)})}("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/d0e1ntHbrVs5EbhAIJhd/likes/",{item_id:e.id});const t=s.textContent.split(" ")[0];s.innerHTML=`${parseInt(t,10)+1} likes`})),async function(n=""){return(await fetch(n,{method:"GET",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"}})).json()}("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/d0e1ntHbrVs5EbhAIJhd/likes/").then((n=>{s.textContent=`${n[t].likes} likes`})),a.appendChild(A),a.appendChild(s),o.appendChild(r),o.appendChild(a);const l=E("button");l.textContent="Comments",e.appendChild(i),e.appendChild(o),e.appendChild(l),M.appendChild(e)})),(n=>{const e=n.children,t={title:"",category:"",price:"",image:""};for(let n=0;n<e.length;n+=1)e[n].children[2].addEventListener("click",(n=>{const e=n.target.parentElement.children[1].children[0].textContent,i=n.target.parentElement.children[0].src;t.title=e,t.image=i,Y(t)}))})(M)})(),b.appendChild(v),y.appendChild(w),k.appendChild(j),B.append(b,y,k),h.appendChild(B),g.append(x,h),T.append(g,M,S)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,