(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var i=t(537),o=t.n(i),a=t(645),r=t.n(a)()(o());r.push([n.id,"* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  overflow-x: hidden;\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100vw;\n  padding: 10px 250px;\n  position: fixed;\n  top: 0;\n  margin-bottom: 50px;\n  background-color: #fff;\n}\n\np {\n  text-align: center;\n}\n\n.visible {\n  display: block;\n}\n\n.invisible {\n  display: none;\n}\n\n.logo {\n  display: flex;\n  flex-direction: row;\n  text-align: center;\n  align-items: center;\n  border: 2px solid #000;\n  height: 80px;\n  width: 80px;\n  border-radius: 50%;\n}\n\nnav ul {\n  display: flex;\n  list-style-type: none;\n  margin-left: 10px;\n}\n\nnav ul li {\n  margin-left: 100px;\n}\n\nnav ul li a {\n  color: #000;\n  text-decoration: none;\n}\n\n.meals {\n  text-decoration: underline;\n  font-weight: bold;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  margin-top: 150px;\n  margin-bottom: 60px;\n  width: 100vw;\n  justify-items: center;\n}\n\n.image {\n  height: 200px;\n  width: 200px;\n}\n\nsection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.likes {\n  display: flex;\n  flex-direction: row;\n  width: 200px;\n  justify-content: space-between;\n  padding: 20px 20px;\n}\n\n.likes img {\n  width: 30px;\n}\n\n.like-counter {\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  margin-left: 20px;\n}\n\nbutton {\n  margin-bottom: 30px;\n  padding: 10px 10px;\n  background-color: #fff;\n  border: 2px solid black;\n  box-shadow: 5px 5px 2px 1px black;\n  font-size: 0.8em;\n  cursor: pointer;\n  align-self: center;\n}\n\n.popup-window {\n  position: relative;\n  width: 65%;\n  margin: 0 auto;\n  padding: 20px;\n  backdrop-filter: blur(4px);\n}\n\n.close-menu {\n  font-size: 35px;\n  position: absolute;\n  top: 33px;\n  font-weight: 900;\n  right: -30px;\n  cursor: pointer;\n}\n\n.popup-window li {\n  list-style: none;\n}\n\n.popup-img-div img {\n  margin-top: 20px;\n  width: 100%;\n  height: 400px;\n}\n\n.popup-details-div {\n  text-align: center;\n}\n\n.popup-details-div h1 {\n  font-size: 50px;\n}\n\n.details-list {\n  display: flex;\n  justify-content: space-between;\n  font-size: 20px;\n}\n\n.comments-container h3 {\n  text-align: center;\n  margin: 20px 0;\n}\n\n.comments-container form {\n  width: 50%;\n  margin: 0 auto;\n}\n\n.input-group input,\ntextarea {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n}\n\n.button-div button {\n  margin-left: 0;\n}\n\nfooter {\n  padding: 20px 100px;\n  border-top: 2px solid black;\n  position: fixed;\n  bottom: 0;\n  width: 100vw;\n  background-color: #fff;\n  margin-top: 100px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,YAAY;EACZ,mBAAmB;EACnB,eAAe;EACf,MAAM;EACN,mBAAmB;EACnB,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB,mBAAmB;EACnB,sBAAsB;EACtB,YAAY;EACZ,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,qBAAqB;AACvB;;AAEA;EACE,0BAA0B;EAC1B,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,kCAAkC;EAClC,2BAA2B;EAC3B,iBAAiB;EACjB,mBAAmB;EACnB,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,YAAY;EACZ,8BAA8B;EAC9B,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;EAClB,sBAAsB;EACtB,uBAAuB;EACvB,iCAAiC;EACjC,gBAAgB;EAChB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,cAAc;EACd,aAAa;EACb,0BAA0B;AAC5B;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,SAAS;EACT,gBAAgB;EAChB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,UAAU;EACV,cAAc;AAChB;;AAEA;;EAEE,WAAW;EACX,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,mBAAmB;EACnB,2BAA2B;EAC3B,eAAe;EACf,SAAS;EACT,YAAY;EACZ,sBAAsB;EACtB,iBAAiB;AACnB",sourcesContent:["* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  overflow-x: hidden;\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100vw;\n  padding: 10px 250px;\n  position: fixed;\n  top: 0;\n  margin-bottom: 50px;\n  background-color: #fff;\n}\n\np {\n  text-align: center;\n}\n\n.visible {\n  display: block;\n}\n\n.invisible {\n  display: none;\n}\n\n.logo {\n  display: flex;\n  flex-direction: row;\n  text-align: center;\n  align-items: center;\n  border: 2px solid #000;\n  height: 80px;\n  width: 80px;\n  border-radius: 50%;\n}\n\nnav ul {\n  display: flex;\n  list-style-type: none;\n  margin-left: 10px;\n}\n\nnav ul li {\n  margin-left: 100px;\n}\n\nnav ul li a {\n  color: #000;\n  text-decoration: none;\n}\n\n.meals {\n  text-decoration: underline;\n  font-weight: bold;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  margin-top: 150px;\n  margin-bottom: 60px;\n  width: 100vw;\n  justify-items: center;\n}\n\n.image {\n  height: 200px;\n  width: 200px;\n}\n\nsection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.likes {\n  display: flex;\n  flex-direction: row;\n  width: 200px;\n  justify-content: space-between;\n  padding: 20px 20px;\n}\n\n.likes img {\n  width: 30px;\n}\n\n.like-counter {\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  margin-left: 20px;\n}\n\nbutton {\n  margin-bottom: 30px;\n  padding: 10px 10px;\n  background-color: #fff;\n  border: 2px solid black;\n  box-shadow: 5px 5px 2px 1px black;\n  font-size: 0.8em;\n  cursor: pointer;\n  align-self: center;\n}\n\n.popup-window {\n  position: relative;\n  width: 65%;\n  margin: 0 auto;\n  padding: 20px;\n  backdrop-filter: blur(4px);\n}\n\n.close-menu {\n  font-size: 35px;\n  position: absolute;\n  top: 33px;\n  font-weight: 900;\n  right: -30px;\n  cursor: pointer;\n}\n\n.popup-window li {\n  list-style: none;\n}\n\n.popup-img-div img {\n  margin-top: 20px;\n  width: 100%;\n  height: 400px;\n}\n\n.popup-details-div {\n  text-align: center;\n}\n\n.popup-details-div h1 {\n  font-size: 50px;\n}\n\n.details-list {\n  display: flex;\n  justify-content: space-between;\n  font-size: 20px;\n}\n\n.comments-container h3 {\n  text-align: center;\n  margin: 20px 0;\n}\n\n.comments-container form {\n  width: 50%;\n  margin: 0 auto;\n}\n\n.input-group input,\ntextarea {\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n}\n\n.button-div button {\n  margin-left: 0;\n}\n\nfooter {\n  padding: 20px 100px;\n  border-top: 2px solid black;\n  position: fixed;\n  bottom: 0;\n  width: 100vw;\n  background-color: #fff;\n  margin-top: 100px;\n}\n"],sourceRoot:""}]);const A=r},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(i)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(r[s]=!0)}for(var p=0;p<n.length;p++){var l=[].concat(n[p]);i&&r[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(o," */"),r=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(r).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var a={},r=[],A=0;A<n.length;A++){var s=n[A],p=i.base?s[0]+i.base:s[0],l=a[p]||0,c="".concat(p," ").concat(l);a[p]=l+1;var d=t(c),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var m=o(u,i);i.byIndex=A,e.splice(A,0,{identifier:c,updater:m,references:1})}r.push(c)}return r}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=i(n=n||[],o=o||{});return function(n){n=n||[];for(var r=0;r<a.length;r++){var A=t(a[r]);e[A].references--}for(var s=i(n,o),p=0;p<a.length;p++){var l=t(a[p]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},704:(n,e,t)=>{n.exports=t.p+"35384cfe509651ff371d.svg"}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var a=e[i]={id:i,exports:{}};return n[i](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),i=t(795),o=t.n(i),a=t(569),r=t.n(a),A=t(565),s=t.n(A),p=t(216),l=t.n(p),c=t(589),d=t.n(c),u=t(426),m={};m.styleTagTransform=d(),m.setAttributes=s(),m.insert=r().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var f=t(704);const C=(n,e)=>{const t=document.createElement(n);return e&&(t.className=e),t},E=C("header"),g=C("div","logo");g.textContent="Restaurant logo";const h=C("nav"),x=C("ul"),B=C("li","meals"),b=C("a");b.href="#",fetch("https://www.themealdb.com/api/json/v1/1/filter.php?c=Seafood").then((n=>n.json())).then((n=>{b.textContent=`Meals (${n.meals.length})`}));const v=C("li"),y=C("a");y.href="#",y.textContent="Planets";const w=C("li"),k=C("a");k.href="#",k.textContent="Races";const j=C("footer");j.textContent="Created By Abdul & Willy under CC licence";const S=document.getElementById("root"),T=C("main"),M=n=>{const e=C("section","popup-window invisible"),t=` \n    <small class='close-menu'>X</small>   \n    <div class='blur-background'> \n      \n      <div class="popup-img-div"><img class="meal-popup-img" src="${n.image}" alt="meal" /></div>\n      <div class="popup-details-div">\n      <h1> ${n.title} </h1>\n      <div class="details-list">\n          <ul>\n          <li>Category: Rice</li>\n          <li>Category: Rice</li>\n          </ul>\n          <ul>\n          <li>Category: Rice</li>\n          <li>Category: Rice</li>\n          </ul>\n      </div>\n    </div>\n    <div class="comments-container">\n  <div class="comments-div">\n    <h3>Comments (3)</h3>\n  </div>\n  <h3>Add a comment</h3>\n  <form>\n    <div class="input-group">\n      <input type="text" class="nameInput" placeholder="Your name" />\n    </div>\n    <div class="input-group">\n      <textarea\n        name=""\n        id="commentInput"\n        cols="30"\n        rows="10"\n        placeholder="Your insights"\n      ></textarea>\n    </div>\n    <div class=''button-div>\n    <button type='submit' class='submit-comment-btn'> Comment </button>\n    </div>\n  </form>\n</div>\n`;e.innerHTML=t,e.style.display="block",T.style.display="none",document.body.appendChild(e),document.querySelector(".close-menu").addEventListener("click",(()=>{e.remove(),T.style.display="grid"}))};(async()=>{const n=await(async()=>(await fetch("https://www.themealdb.com/api/json/v1/1/filter.php?c=Seafood")).json())();n.meals.forEach(((e,t)=>{e=C("section");const i=C("img","image");i.src=n.meals[t].strMealThumb,i.alt="space-image",e.id=n.meals[t].idMeal;const o=C("div","likes"),a=C("p");a.textContent=n.meals[t].strMeal;const r=C("div","like-counter"),A=C("img");A.src=f,A.alt="heart-image";const s=C("p");s.textContent="0 like",A.addEventListener("click",(async n=>{n.preventDefault(),async function(n="",e={}){await fetch(n,{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer",body:JSON.stringify(e)})}("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/d0e1ntHbrVs5EbhAIJhd/likes/",{item_id:e.id});const t=s.textContent.split(" ")[0];s.innerHTML=`${parseInt(t,10)+1} likes`})),async function(n=""){return(await fetch(n,{method:"GET",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"}})).json()}("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/d0e1ntHbrVs5EbhAIJhd/likes/").then((n=>{s.textContent=`${n[t].likes} likes`})),r.appendChild(A),r.appendChild(s),o.appendChild(a),o.appendChild(r);const p=C("button");p.textContent="comments",e.appendChild(i),e.appendChild(o),e.appendChild(p),T.appendChild(e)})),(n=>{const e=n.children,t={title:"",category:"",price:"",image:""};for(let n=0;n<e.length;n+=1)e[n].children[2].addEventListener("click",(n=>{const e=n.target.parentElement.children[1].children[0].textContent,i=n.target.parentElement.children[0].src;t.title=e,t.image=i,M(t)}))})(T)})(),B.appendChild(b),v.appendChild(y),w.appendChild(k),x.append(B,v,w),h.appendChild(x),E.append(g,h),S.append(E,T,j)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,